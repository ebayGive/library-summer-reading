<h3>Grid</h3>
      <%- partial('/partial/message', {flash: flash}) %>
<div class="row">
  <div class="col-sm-5 col-md-3" id="divUserTypes"></div>
  <div class="col-sm-5 col-md-3" id="divActions"></div>
</div>
<br/>
<div class="row">
  <div class="col-sm-0 col-md-1"></div>
  <div class="col-sm-12 col-md-10" id="divGrid">
  </div>
  <div class="col-sm-0 col-md-1"></div>
</div>
<script>
  url = "/grids";
  var gridData = {};
  var gridIconOptions = [];
  var NUMBER_OF_GRID_CELLS = 16;
  var NUMBER_OF_CELLS_PER_ROW = 4;
  <%for(var iCn in gridIcons){%>
    gridIconOptions[<%=iCn%>] = {text: '<%=gridIcons[iCn].name%>', value: '<%=gridIcons[iCn].name%>'};
  <%}%>

  $(document).ready(function(){
    loadUserTypes();
  });
  
  function loadUserTypes() {
    var userTypeUrl = '/user_types.json';
    $.ajax({url: userTypeUrl,
        contentType: "application/json", 
        type: "GET",
        dataType: "json"})
        .done(function(resdata){addSelectOptions(resdata);})
        .fail(function(){});
  } 
  
  function addSelectOptions(userTypes) {
    var selectUserTypeTag = '<div class="input-group">';
    selectUserTypeTag += '<select id="userTypes" class="form-control">';
    selectUserTypeTag += '<option value="">--Select User Type--</option>'
    for(var i in userTypes) {
       selectUserTypeTag += '<option value="' + userTypes[i].id + '">' + userTypes[i].name + '</option>';
    }
    selectUserTypeTag += '</select>';
    selectUserTypeTag += '<span class="input-group-btn"><button class="btn btn-default" onclick="loadGrid()">Go</button></span>';
    selectUserTypeTag += '</div>';
    
    $('#divUserTypes').append($(selectUserTypeTag));
  }
  
  function loadGrid() {
      event.preventDefault();
      if($('#userTypes').val() == "") {
        alert("Please select one user type");
        return;
      }
      var gridUrl = '/grids.json';
      gridUrl += '?userType=' + $('#userTypes').val();
      $.ajax({url: gridUrl,
        contentType: "application/json", 
        type: "GET",
        dataType: "json",
        async: false
   })
        .done(function(resdata){drawGrid(resdata);})
        .fail(function( jqXHR) {handleGridError(jqXHR)});
  }
  
  function handleGridError(jqXHR) {
    if(jqXHR.responseJSON.statusCode == "404") {
      drawGrid(getGridTemplate());
    }
  }
  
  function getGridTemplate() {
    gridTemplate = {};
    gridTemplate.userType = $('#userTypes').val();
    gridTemplate.cells = [];
    for(var i=0; i < NUMBER_OF_GRID_CELLS; i++ ) {
      gridTemplate.cells[gridTemplate.cells.length] = {index: i, description: '', imgSrc: '', whatDidIDo: 'What did I do?'};
    }
    return gridTemplate;
  }
  
  function drawGrid(data) {
    var noCols = NUMBER_OF_CELLS_PER_ROW;
    var gridHtml = '';
    
    gridData = data;
    
    for (var cell in gridData.cells) {
      if(cell % noCols == 0) {
        if(gridHtml != '') {
          gridHtml += '</div>';
        }
        gridHtml += '<div class="row">';
      }
      gridHtml += '<div class="grid-padding col-sm-3 col-md-3">';
      gridHtml += '<div id="cell_' + gridData.cells[cell].index + '" class="grid-with-icon-bordered">';
      gridHtml += '<textarea id="desc_' + gridData.cells[cell].index + '" class="form-control grid-textarea" maxLength="300" rows="4">' + gridData.cells[cell].description + '</textarea>';
      gridHtml += '<input id="whatDidIDo_' + gridData.cells[cell].index + '" class="form-control" type="text" maxLength="100" value="' + gridData.cells[cell].whatDidIDo + '"/>';
      gridHtml += selectTag(gridIconOptions, gridData.cells[cell].gridIcon, {name: 'gridIcon_' + gridData.cells[cell].index, id: 'gridIcon_' +  gridData.cells[cell].index, class: 'form-control'});
      gridHtml += '</div></div>';
    }
    if(gridHtml != '') {
       gridHtml += '</div>';
    }
    $('#divGrid').empty().append(gridHtml);
    
    if(!gridData.id) {
      makeGridEditable();
    }
    else {
      makeGridNonEditable();
    }
  }
  
  function drawGridActions(fEdit) {
    var actionTag = '';
    if(fEdit) {
      actionTag = '<a href="#" onclick="saveGrid();return false;" class="btn btn-primary"><i class="glyphicon glyphicon-ok"></i>&nbsp;Save</a>&nbsp;';
      actionTag += '<a href="#" onclick="cancelEditGrid();return false;" class="btn btn-default"><i class="glyphicon glyphicon-remove">&nbsp;Cancel</i></a>';
    }
    else {
      actionTag = '<a href="#" onclick="editGrid();return false;" class="btn btn-primary"><i class="glyphicon glyphicon-edit">&nbsp;Edit</i></a>&nbsp;';
    }
    $('#divActions').empty().append(actionTag);
  }
  
  
  function makeGridEditable() {
    $('textarea').each(function(){
      $(this).prop("readonly", "");
    });
    $('input[type="text"]').each(function(){
      $(this).prop("readonly", "");
    });
    $( "select[id*='gridIcon']" ).prop("disabled", false);
    drawGridActions(true);
  }
 
  function makeGridNonEditable() {
    $('textarea').each(function(){
      $(this).prop("readonly", "readonly");
    });
    $('input[type="text"]').each(function(){
      $(this).prop("readonly", "readonly");
    });
    $( "select[id*='gridIcon']" ).prop("disabled", "disabled");
    drawGridActions(false);
  }

  function editGrid() {
    makeGridEditable();
  } 
  
  function saveGrid() {
    updateGridData();
    var type = "POST";
    var saveUrl = url;
    if(gridData.id) {
      saveUrl += "/" + gridData.id;
      type = "PUT";
    }
    saveUrl += ".json"
    $.ajax({url: saveUrl,
        data: JSON.stringify(gridData), 
        contentType: "application/json", 
        type: type,
        dataType: "json"})
        .done(function(resdata){saveGridSuccess(resdata);})
        .fail(function( jqXHR) {saveFailed(jqXHR)});
  }

  function updateGridData() {
    for(var iCell=0; iCell<NUMBER_OF_GRID_CELLS; iCell++) {
      gridData.cells[iCell].description = $('#desc_' + gridData.cells[iCell].index).val();
      gridData.cells[iCell].gridIcon = $('#gridIcon_' + gridData.cells[iCell].index).val();
      gridData.cells[iCell].whatDidIDo = $('#whatDidIDo_' + gridData.cells[iCell].index).val();
    }
    if(gridData.cells.length > NUMBER_OF_GRID_CELLS) {
      var newCells = [];
      for(var iCell=0; iCell<NUMBER_OF_GRID_CELLS; iCell++) {
        newCells[iCell] = gridData.cells[iCell];
      }
      gridData.cells = newCells;
    }
    if(gridData.id == "-1") {
      gridData.id = null;
    }
  }
  
  function getId(element) {
   var elementId =  $(element).prop('id');
   if(elementId) {
        var idArr = elementId.split('_');
        if(idArr.length > 1) {
          return idArr[1];
        }
   }
   return "-1";
  }
  
  function saveGridSuccess(data) {
    gridData = data;
    makeGridNonEditable();
  }
  
  function cancelEditGrid() {
    if(!confirm('Are you sure you want to cancel the changes you made?')) {
       return false;
    }
    resetGridCells();
    makeGridNonEditable();
  }
  
  function resetGridCells() {
    for(var iCell=0, gridSize = gridData.cells.length; iCell<gridSize; iCell++) {
      $('#desc_' + gridData.cells[iCell].index).val(gridData.cells[iCell].description);
      $('#whatDidIDo_' + gridData.cells[iCell].index).val(gridData.cells[iCell].whatDidIDo);
    }
  }
</script>